version: "3"

services:
  storage-server:
    image: grafana/grafana-oss-dev:11.2.0-184356
    command:
      - target
      - --config=/etc/grafana/grafana.ini
    restart: unless-stopped
    ports:
      - '10000:10000'
      - '3001:3000'
    volumes:
      - type: bind
        source: ./data/grafana/storage-server.ini
        target: /etc/grafana/grafana.ini
    environment:
      GF_DEFAULT_TARGET: storage-server
      # GF_ENTITY_API_DB_TYPE: 'sqlite'
    # depends_on:
    #   cockroach:
    #     condition: service_healthy

  # # mysql://grafana:password@mysql:3306/grafana
  mysql:
    image: mysql:8.4
    command:
      - --max_connections=2048
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: grafana
      MYSQL_USER: grafana
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root_password

  # cockroach://root@cockroach:26257/postgres?sslmode=disable
  # cockroach:
  #   image: cockroachdb/cockroach:v23.2.2
  #   platform: linux/amd64
  #   # Uncomment this to enable persistence.
  #   # volumes:
  #   #   - ${PWD}/data/cockroach:/cockroach/cockroach-data
  #   ports:
  #     - "8080:8080"
  #     - "26257:26257"
  #   restart: on-failure
  #   command:
  #     - start-single-node
  #     - --insecure
  #     - --max-sql-memory=.25
  #     - --cache=.25
  #   # environment:
  #   #   COCKROACH_DATABASE: grafana
  #   #   COCKROACH_USER: grafana
  #   #   COCKROACH_PASSWORD: grafana
  #   healthcheck:
  #     test: "curl -f http://localhost:8080/health?ready=1 || 1"
  #     start_interval: 5s
  #     start_period: 30s

  grafana:
    image: grafana/grafana:11.1.0
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./data/grafana/provisioning:/etc/grafana/provisioning/

  prometheus:
    image: prom/prometheus:v2.53.0
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/etc/prometheus/data
    ports:
      - "9090:9090"
    volumes:
      - type: bind
        source: ./data/prometheus/prometheus.yaml
        target: /etc/prometheus/prometheus.yaml
      - prometheus:/prometheus/data

volumes:
  prometheus: {}
